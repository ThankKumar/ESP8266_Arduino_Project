#define BLYNK_TEMPLATE_ID "TMPL31ylBjUM3"
#define BLYNK_TEMPLATE_NAME "IOTproject"
#define BLYNK_AUTH_TOKEN "FeAMpk74Pk3MYDNsmS_feittU-Iq-36A"

#define BLYNK_PRINT Serial

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <DHT.h>

#define DHTPIN D7      // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11  // DHT 11
#define FAN_PIN D2     // FAN RELAY

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "SwamiJI";
char pass[] = "6205662950";

float humDHT = 0;
float tempDHT = 0;

// Initialize DHT sensor.
DHT dht(DHTPIN, DHTTYPE);

BLYNK_WRITE(V3) {
  int switchState = param.asInt();
  if (switchState == 1) {
    digitalWrite(FAN_PIN, HIGH);
  } else if (switchState == 0){
    digitalWrite(FAN_PIN, LOW);
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(FAN_PIN, OUTPUT);
  digitalWrite(FAN_PIN, LOW);
  Serial.println(F("DHTxx test!"));
  dht.begin();
  Blynk.begin(auth, ssid, pass);
}

void loop() {
  Blynk.run();
  // Wait a few seconds between measurements.
  delay(2000);

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  humDHT = dht.readHumidity();
  // Read temperature as Celsius (the default)
  tempDHT = dht.readTemperature();

  // Check if any reads failed and exit early (to try again).
  if (isnan(humDHT) || isnan(tempDHT)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  Serial.print(F("Temperature: "));
  Serial.print(tempDHT);
  Serial.print(F("Â°C "));
  Serial.println();
  Serial.print(F("Humidity: "));
  Serial.print(humDHT);
  Serial.print(F("%"));
  Serial.println();

  Serial.println("***********************");
  Serial.println();

  // If you enable this code your fan will work based on temp
  if (tempDHT > 31) {
    // digitalWrite(FAN_PIN, HIGH);
  } else {
    // digitalWrite(FAN_PIN, LOW);
  }

  Blynk.virtualWrite(V1, tempDHT);
  Blynk.virtualWrite(V2, humDHT);
}
